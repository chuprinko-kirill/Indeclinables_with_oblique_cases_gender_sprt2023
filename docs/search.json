[
  {
    "objectID": "indeclinables_in_obl_gender_sprt.html#preparing-the-data",
    "href": "indeclinables_in_obl_gender_sprt.html#preparing-the-data",
    "title": "Oblique case gender of indeclinables",
    "section": "Preparing the data",
    "text": "Preparing the data\n\nresults <- read.pcibex(\"results.csv\")\n# get rid of uninformative columns and rows\nresults <- results %>% filter(Label == \"sprt\" | Label == \"judgement\")\nresults <- filter(results, PennElementType != \"PennController\")\nresults <- dplyr::select(.data = results, -c(EventTime, Comments, Controller.name))\n\n\n# we allowed few typos in the stimuli, mark observations with them\nresults <- results %>% mutate(typo = ifelse(\n  str_detect(Parameter, \"(пенсе|бесопкоит|вегетерианцев|хоязйству)\") |\n    str_detect(Sentence..or.sentence.MD5., \"(пенсе|бесопкоит|вегетерианцев|хоязйству)\"),\n  1, 0\n))\n\n\n# we have a few tasks in the dataset: sprt, comprehension questions, acceptability judgement\n# let's divide the observations into 3 datasets for convenience\n\nsprt <- results %>% filter(Label == \"sprt\")\njudgement <- results %>% filter(Label == \"judgement\")\nrm(results) # remove the original dataset\n\ncomprehension_questions <- sprt %>% filter(PennElementName == \"Question\")\nsprt <- sprt %>% filter(PennElementType == \"Controller-DashedSentence\")"
  },
  {
    "objectID": "indeclinables_in_obl_gender_sprt.html#demographic-data",
    "href": "indeclinables_in_obl_gender_sprt.html#demographic-data",
    "title": "Oblique case gender of indeclinables",
    "section": "Demographic data",
    "text": "Demographic data\n\n####### demographic data overview\ndemog <- sprt %>% distinct(Results.reception.time, MD5.hash.of.participant.s.IP.address, sex, age)\n# кто-то один не указал возраст :-(\ndemog <- na.omit(demog)\n\ndemog %>%\n  ggplot(aes(x = age, fill = sex)) +\n  geom_histogram(bins = nrow(demog)) +\n  geom_vline(xintercept = mean(demog$age), col = \"red\", lwd = .5) +\n  scale_fill_manual(values=c(\"#69b3a2\", \"#404080\")) +\n  annotate(\"text\",\n    x = mean(demog$age) * 1.3, y = 8.5,\n    label = paste(\"Mean =\", mean(demog$age), \"\\n std = \", sd(demog$age)),\n    col = \"red\",\n    size = 3\n  ) +\n  ylab(\"count\")"
  },
  {
    "objectID": "indeclinables_in_obl_gender_sprt.html#comprehension-questions",
    "href": "indeclinables_in_obl_gender_sprt.html#comprehension-questions",
    "title": "Oblique case gender of indeclinables",
    "section": "Comprehension questions",
    "text": "Comprehension questions\n\n######## check comprehension question stats\ncomprehension_questions <- comprehension_questions %>%\n  rename(RT = Newline., correct = Reading.time)\ncomprehension_questions$correct <- as.numeric(comprehension_questions$correct)\n\n# 32 is total number of questions\ncomprehension_questions %>%\n  group_by(Results.reception.time, MD5.hash.of.participant.s.IP.address) %>%\n  summarise(n_correct = sum(correct), share_correct = sum(correct) / 32) %>%\n  arrange(n_correct)\n\n# A tibble: 92 × 4\n# Groups:   Results.reception.time [92]\n   Results.reception.time MD5.hash.of.participant.s.IP.address n_correct share…¹\n                    <int> <chr>                                    <dbl>   <dbl>\n 1             1678180237 d49c679192a0a22bec3ec6ead5f37ff3            28   0.875\n 2             1678352462 27f3cc7e1a676034e04714d86ec708b9            28   0.875\n 3             1678135178 a60868e03d4eaf0c0f3503e2c558f918            29   0.906\n 4             1678137776 4a7eafcdbb84d26d0b2964ac0aa528a9            29   0.906\n 5             1678381937 b3197739e4b133fc95a88778a770d20b            29   0.906\n 6             1678383226 b3197739e4b133fc95a88778a770d20b            29   0.906\n 7             1678131799 9c9ec2e33b2d6eb95e71551cbc88b329            30   0.938\n 8             1678139741 45f5c1924facb98cc219b7acfe7c7abd            30   0.938\n 9             1678180551 f4be9f43c323920ffa418e993ac801c7            30   0.938\n10             1678184786 b2c01a1b7c4563b3598ba668ceec99fd            30   0.938\n# … with 82 more rows, and abbreviated variable name ¹​share_correct"
  },
  {
    "objectID": "indeclinables_in_obl_gender_sprt.html#self-paced-reading-task",
    "href": "indeclinables_in_obl_gender_sprt.html#self-paced-reading-task",
    "title": "Oblique case gender of indeclinables",
    "section": "Self-paced reading task",
    "text": "Self-paced reading task\n\n####### reading time in sprt\nsprt <- sprt %>%\n  filter(type != \"filler\") %>%\n  rename(region = Parameter, rt1 = Reading.time)\n\n# some really strange bug but it concerns only the final region, so doesn't really matter\nsprt <- sprt %>% filter(rt1 != \"NaN\")\n\n## delete stimuli with typos\nsprt <- sprt %>% filter(typo == 0)\n\n\n# statistics on RT\nsprt <- sprt %>% mutate_at(c(\"region\", \"rt1\"), as.numeric)\nsprt %>% summarise(mean(rt1), sd(rt1), min(rt1), max(rt1))\n\n  mean(rt1)  sd(rt1) min(rt1) max(rt1)\n1  565.6736 966.5092       23   100048\n\n\n\nclean_outliers <- function(x) {\n  y <- droplevels(subset(x, x$rt1 > 100 & x$rt1 < 3000))\n  y <- droplevels(subset(y, y$rt1 <= mean(y$rt1) + 2.5 * sd(y$rt1) & y$rt1 >= mean(y$rt1) - 2.5 * sd(y$rt1)))\n  return(y)\n}\n\n# let's change \"gender\" feature notation: making fem vs non_fem\nsprt <- sprt %>% mutate(gender = ifelse(gender == \"n\" | gender == \"m\", \"non_fem\", \"fem\"))\n\n# clean the data\noutliers <- split(sprt, paste(sprt$region, sprt$case, sprt$gender))\noutliers <- lapply(outliers, clean_outliers)\nclean_data <- do.call(\"rbind\", outliers)\n\n# 24*9*0.85 = 183.6 #24 stimuli, 9 regions each\nclean_data %>%\n  group_by(Results.reception.time, MD5.hash.of.participant.s.IP.address) %>%\n  filter(n() > 183) -> clean_data # exclude answers of people, for whom we deleted more than 15% of data\n\nclean_data %>%\n  distinct(Results.reception.time, MD5.hash.of.participant.s.IP.address) %>%\n  nrow()\n\n[1] 81\n\n\n\n### visualize\n# -u nouns\nggplot(clean_data %>% filter(type %in% c(\n  \"acc_fem\", \"acc_masc_or_neut\",\n  \"nom_fem_u\", \"nom_masc_or_neut_u\"\n)) %>%\n  group_by(region, type) %>%\n  summarise(mean = mean(rt1), std = sd(rt1))) +\n  geom_line(aes(x = region, y = mean, col = type)) +\n  scale_x_continuous(name = \"word number\", breaks = c(1:9)) +\n  ylab(\"Mean reading time\") +\n  theme_bw()\n\n\n\n\n\n#-e nouns\nggplot(clean_data %>% filter(type %in% c(\n  \"dat_fem\", \"dat_masc_or_neut\",\n  \"nom_fem_e\", \"nom_masc_or_neut_e\"\n)) %>%\n  group_by(region, type) %>%\n  summarise(mean = mean(rt1), std = sd(rt1))) +\n  geom_line(aes(x = region, y = mean, col = type)) +\n  scale_x_continuous(name = \"word number\", breaks = c(1:9)) +\n  ylab(\"Mean reading time\") +\n  theme_bw()"
  },
  {
    "objectID": "indeclinables_in_obl_gender_sprt.html#sprt-rt-regressions-by-region",
    "href": "indeclinables_in_obl_gender_sprt.html#sprt-rt-regressions-by-region",
    "title": "Oblique case gender of indeclinables",
    "section": "SPRT RT regressions by region",
    "text": "SPRT RT regressions by region\n\nsprt_regression <- function(data_set, region_N){\n  lmer(\n    rt1 ~ type + (1 | MD5.hash.of.participant.s.IP.address) + (1 | noun),\n    data_set %>% filter(region == as.character(region_N))\n  ) %>%\n    summary(.)\n}\n\n\nprint(\"-u\")\n\n[1] \"-u\"\n\ndata_u <- clean_data %>% filter(type %in% c(\n  \"acc_fem\", \"acc_masc_or_neut\",\n  \"nom_fem_u\", \"nom_masc_or_neut_u\"\n))\ndata_u$type <- as.factor(data_u$type) %>% relevel(., ref = \"nom_masc_or_neut_u\")\n\n# На1 ветке2 мы3 увидели4 какаду5, сверкающего6 своим7 ярким8 оперением9.\nfor (N in 6:9) print(sprt_regression(data_u, N))\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: rt1 ~ type + (1 | MD5.hash.of.participant.s.IP.address) + (1 |  \n    noun)\n   Data: data_set %>% filter(region == as.character(region_N))\n\nREML criterion at convergence: 12856\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.1927 -0.5714 -0.1541  0.3698  4.3786 \n\nRandom effects:\n Groups                               Name        Variance Std.Dev.\n MD5.hash.of.participant.s.IP.address (Intercept) 43467    208.5   \n noun                                 (Intercept)  2034     45.1   \n Residual                                         47106    217.0   \nNumber of obs: 933, groups:  MD5.hash.of.participant.s.IP.address, 75; noun, 12\n\nFixed effects:\n                     Estimate Std. Error t value\n(Intercept)            542.43      30.99  17.502\ntypeacc_fem             60.30      20.26   2.977\ntypeacc_masc_or_neut    10.31      20.23   0.510\ntypenom_fem_u           46.87      20.41   2.296\n\nCorrelation of Fixed Effects:\n            (Intr) typcc_ typ___\ntypeacc_fem -0.335              \ntypcc_msc__ -0.334  0.510       \ntypenom_fm_ -0.333  0.513  0.505\nLinear mixed model fit by REML ['lmerMod']\nFormula: rt1 ~ type + (1 | MD5.hash.of.participant.s.IP.address) + (1 |  \n    noun)\n   Data: data_set %>% filter(region == as.character(region_N))\n\nREML criterion at convergence: 12284.4\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.4049 -0.5637 -0.1865  0.3517  4.7856 \n\nRandom effects:\n Groups                               Name        Variance Std.Dev.\n MD5.hash.of.participant.s.IP.address (Intercept) 17735.9  133.18  \n noun                                 (Intercept)   334.6   18.29  \n Residual                                         22941.1  151.46  \nNumber of obs: 942, groups:  MD5.hash.of.participant.s.IP.address, 75; noun, 12\n\nFixed effects:\n                     Estimate Std. Error t value\n(Intercept)            463.61      19.11  24.261\ntypeacc_fem             52.42      14.03   3.737\ntypeacc_masc_or_neut    10.98      13.97   0.786\ntypenom_fem_u           16.88      14.17   1.192\n\nCorrelation of Fixed Effects:\n            (Intr) typcc_ typ___\ntypeacc_fem -0.374              \ntypcc_msc__ -0.374  0.509       \ntypenom_fm_ -0.370  0.507  0.503\nLinear mixed model fit by REML ['lmerMod']\nFormula: rt1 ~ type + (1 | MD5.hash.of.participant.s.IP.address) + (1 |  \n    noun)\n   Data: data_set %>% filter(region == as.character(region_N))\n\nREML criterion at convergence: 11836.1\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.3568 -0.5263 -0.1298  0.3208  7.1321 \n\nRandom effects:\n Groups                               Name        Variance Std.Dev.\n MD5.hash.of.participant.s.IP.address (Intercept) 12364.5  111.20  \n noun                                 (Intercept)   164.6   12.83  \n Residual                                         12954.7  113.82  \nNumber of obs: 948, groups:  MD5.hash.of.participant.s.IP.address, 75; noun, 12\n\nFixed effects:\n                     Estimate Std. Error t value\n(Intercept)           429.681     15.328  28.032\ntypeacc_fem            12.279     10.494   1.170\ntypeacc_masc_or_neut    1.999     10.461   0.191\ntypenom_fem_u          12.112     10.610   1.142\n\nCorrelation of Fixed Effects:\n            (Intr) typcc_ typ___\ntypeacc_fem -0.348              \ntypcc_msc__ -0.348  0.508       \ntypenom_fm_ -0.345  0.506  0.502\nLinear mixed model fit by REML ['lmerMod']\nFormula: rt1 ~ type + (1 | MD5.hash.of.participant.s.IP.address) + (1 |  \n    noun)\n   Data: data_set %>% filter(region == as.character(region_N))\n\nREML criterion at convergence: 12066.7\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.6390 -0.5201 -0.1552  0.3239  5.4379 \n\nRandom effects:\n Groups                               Name        Variance Std.Dev.\n MD5.hash.of.participant.s.IP.address (Intercept) 17467.3  132.16  \n noun                                 (Intercept)   530.2   23.03  \n Residual                                         22308.7  149.36  \nNumber of obs: 927, groups:  MD5.hash.of.participant.s.IP.address, 74; noun, 12\n\nFixed effects:\n                     Estimate Std. Error t value\n(Intercept)           484.365     19.487  24.856\ntypeacc_fem             6.974     13.932   0.501\ntypeacc_masc_or_neut  -12.372     13.918  -0.889\ntypenom_fem_u          -8.293     14.109  -0.588\n\nCorrelation of Fixed Effects:\n            (Intr) typcc_ typ___\ntypeacc_fem -0.365              \ntypcc_msc__ -0.363  0.506       \ntypenom_fm_ -0.360  0.508  0.500\n\n\n\nprint(\"-e\")\n\n[1] \"-e\"\n\ndata_e <- clean_data %>% filter(type %in% c(\n  \"dat_fem\", \"dat_masc_or_neut\",\n  \"nom_fem_e\", \"nom_masc_or_neut_e\"\n))\ndata_e$type <- as.factor(data_e$type) %>% relevel(., ref = \"nom_masc_or_neut_e\")\n\nfor (N in 6:9) print(sprt_regression(data_e, N))\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: rt1 ~ type + (1 | MD5.hash.of.participant.s.IP.address) + (1 |  \n    noun)\n   Data: data_set %>% filter(region == as.character(region_N))\n\nREML criterion at convergence: 12781.5\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.3725 -0.5494 -0.1469  0.3408  4.8012 \n\nRandom effects:\n Groups                               Name        Variance Std.Dev.\n MD5.hash.of.participant.s.IP.address (Intercept) 40149    200.37  \n noun                                 (Intercept)  1350     36.74  \n Residual                                         43627    208.87  \nNumber of obs: 933, groups:  MD5.hash.of.participant.s.IP.address, 75; noun, 12\n\nFixed effects:\n                     Estimate Std. Error t value\n(Intercept)            540.62      28.91  18.703\ntypedat_fem             40.35      19.47   2.072\ntypedat_masc_or_neut    23.04      19.33   1.192\ntypenom_fem_e           32.54      19.40   1.677\n\nCorrelation of Fixed Effects:\n            (Intr) typdt_ typ___\ntypedat_fem -0.332              \ntypdt_msc__ -0.332  0.494       \ntypenom_fm_ -0.333  0.498  0.494\nLinear mixed model fit by REML ['lmerMod']\nFormula: rt1 ~ type + (1 | MD5.hash.of.participant.s.IP.address) + (1 |  \n    noun)\n   Data: data_set %>% filter(region == as.character(region_N))\n\nREML criterion at convergence: 12204.5\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.1450 -0.5425 -0.1596  0.2986  5.8424 \n\nRandom effects:\n Groups                               Name        Variance Std.Dev.\n MD5.hash.of.participant.s.IP.address (Intercept) 17391.3  131.88  \n noun                                 (Intercept)   296.7   17.22  \n Residual                                         22261.8  149.20  \nNumber of obs: 938, groups:  MD5.hash.of.participant.s.IP.address, 75; noun, 12\n\nFixed effects:\n                     Estimate Std. Error t value\n(Intercept)           458.462     18.767  24.429\ntypedat_fem            37.325     13.901   2.685\ntypedat_masc_or_neut    7.286     13.763   0.529\ntypenom_fem_e          32.418     13.785   2.352\n\nCorrelation of Fixed Effects:\n            (Intr) typdt_ typ___\ntypedat_fem -0.365              \ntypdt_msc__ -0.365  0.493       \ntypenom_fm_ -0.367  0.499  0.497\nLinear mixed model fit by REML ['lmerMod']\nFormula: rt1 ~ type + (1 | MD5.hash.of.participant.s.IP.address) + (1 |  \n    noun)\n   Data: data_set %>% filter(region == as.character(region_N))\n\nREML criterion at convergence: 11857.4\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.6776 -0.5671 -0.1551  0.3357  4.6138 \n\nRandom effects:\n Groups                               Name        Variance Std.Dev.\n MD5.hash.of.participant.s.IP.address (Intercept) 14930.1  122.19  \n noun                                 (Intercept)   632.4   25.15  \n Residual                                         14101.4  118.75  \nNumber of obs: 942, groups:  MD5.hash.of.participant.s.IP.address, 75; noun, 12\n\nFixed effects:\n                     Estimate Std. Error t value\n(Intercept)            434.15      17.68  24.551\ntypedat_fem             20.88      11.03   1.893\ntypedat_masc_or_neut    14.03      10.97   1.279\ntypenom_fem_e           21.33      11.00   1.939\n\nCorrelation of Fixed Effects:\n            (Intr) typdt_ typ___\ntypedat_fem -0.311              \ntypdt_msc__ -0.310  0.497       \ntypenom_fm_ -0.312  0.504  0.498\nLinear mixed model fit by REML ['lmerMod']\nFormula: rt1 ~ type + (1 | MD5.hash.of.participant.s.IP.address) + (1 |  \n    noun)\n   Data: data_set %>% filter(region == as.character(region_N))\n\nREML criterion at convergence: 11841.7\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.1153 -0.5301 -0.1404  0.3547  5.1368 \n\nRandom effects:\n Groups                               Name        Variance Std.Dev.\n MD5.hash.of.participant.s.IP.address (Intercept) 19934.6  141.19  \n noun                                 (Intercept)   825.8   28.74  \n Residual                                         19617.0  140.06  \nNumber of obs: 917, groups:  MD5.hash.of.participant.s.IP.address, 74; noun, 12\n\nFixed effects:\n                     Estimate Std. Error t value\n(Intercept)            480.02      20.64  23.251\ntypedat_fem             30.03      13.22   2.271\ntypedat_masc_or_neut    17.09      13.13   1.302\ntypenom_fem_e           13.57      13.23   1.026\n\nCorrelation of Fixed Effects:\n            (Intr) typdt_ typ___\ntypedat_fem -0.322              \ntypdt_msc__ -0.321  0.502       \ntypenom_fm_ -0.321  0.506  0.501"
  },
  {
    "objectID": "indeclinables_in_obl_gender_sprt.html#acceptability-judgement",
    "href": "indeclinables_in_obl_gender_sprt.html#acceptability-judgement",
    "title": "Oblique case gender of indeclinables",
    "section": "Acceptability judgement",
    "text": "Acceptability judgement\n\n####### Judgements\njudgement <- judgement %>% filter(Value != \"NULL\")\njudgement <- judgement %>% mutate(gender = ifelse(gender == \"n\" | gender == \"m\", \"non_fem\", \"fem\"))\n\njudgement %>%\n  group_by(type) %>%\n  summarise(average = mean(as.numeric(Value)), std = sd(as.numeric(Value)))\n\n# A tibble: 8 × 3\n  type               average   std\n  <chr>                <dbl> <dbl>\n1 acc_fem               2.19  1.44\n2 acc_masc_or_neut      3.97  1.40\n3 dat_fem               1.73  1.19\n4 dat_masc_or_neut      3.99  1.38\n5 nom_fem_e             1.67  1.13\n6 nom_fem_u             2.10  1.36\n7 nom_masc_or_neut_e    4.29  1.19\n8 nom_masc_or_neut_u    4.29  1.17\n\njudgement$Value <- factor(judgement$Value, ordered = T)\n\njudgement_u <- judgement %>% filter(type %in% c(\n  \"acc_fem\", \"acc_masc_or_neut\",\n  \"nom_fem_u\", \"nom_masc_or_neut_u\"\n))\njudgement_u$type <- as.factor(judgement_u$type) %>% relevel(., ref = \"nom_masc_or_neut_u\")\n\njudgement_e <- judgement %>% filter(type %in% c(\n  \"dat_fem\", \"dat_masc_or_neut\",\n  \"nom_fem_e\", \"nom_masc_or_neut_e\"\n))\njudgement_e$type <- as.factor(judgement_e$type) %>% relevel(., ref = \"nom_masc_or_neut_e\")"
  },
  {
    "objectID": "indeclinables_in_obl_gender_sprt.html#judgement-regressions",
    "href": "indeclinables_in_obl_gender_sprt.html#judgement-regressions",
    "title": "Oblique case gender of indeclinables",
    "section": "Judgement regressions",
    "text": "Judgement regressions\n\nprint(\"Acceptability within -u nouns\")\n\n[1] \"Acceptability within -u nouns\"\n\nglmer(\n  Value ~ type + (1 | MD5.hash.of.participant.s.IP.address)\n    + (1 | noun),\n  judgement_u,\n  family = \"binomial\"\n) %>%\n  summary(.)\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: Value ~ type + (1 | MD5.hash.of.participant.s.IP.address) + (1 |  \n    noun)\n   Data: judgement_u\n\n     AIC      BIC   logLik deviance df.resid \n   957.1    987.2   -472.6    945.1     1098 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-7.1488 -0.4100  0.1819  0.3989  3.9952 \n\nRandom effects:\n Groups                               Name        Variance Std.Dev.\n MD5.hash.of.participant.s.IP.address (Intercept) 2.478    1.5741  \n noun                                 (Intercept) 0.300    0.5477  \nNumber of obs: 1104, groups:  \nMD5.hash.of.participant.s.IP.address, 85; noun, 12\n\nFixed effects:\n                     Estimate Std. Error z value Pr(>|z|)    \n(Intercept)            3.8597     0.3973   9.714  < 2e-16 ***\ntypeacc_fem           -3.8700     0.3543 -10.923  < 2e-16 ***\ntypeacc_masc_or_neut  -0.9152     0.3531  -2.591  0.00956 ** \ntypenom_fem_u         -3.7313     0.3528 -10.577  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) typcc_ typ___\ntypeacc_fem -0.727              \ntypcc_msc__ -0.594  0.668       \ntypenom_fm_ -0.728  0.824  0.672\n\nprint(\"Acceptability within -e nouns\")\n\n[1] \"Acceptability within -e nouns\"\n\nglmer(\n  Value ~ type + (1 | MD5.hash.of.participant.s.IP.address)\n    + (1 | noun),\n  judgement_e,\n  family = \"binomial\"\n) %>%\n  summary(.)\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: Value ~ type + (1 | MD5.hash.of.participant.s.IP.address) + (1 |  \n    noun)\n   Data: judgement_e\n\n     AIC      BIC   logLik deviance df.resid \n   916.3    946.3   -452.1    904.3     1098 \n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-16.3028  -0.3885   0.1224   0.3623   2.9502 \n\nRandom effects:\n Groups                               Name        Variance Std.Dev.\n MD5.hash.of.participant.s.IP.address (Intercept) 2.6972   1.6423  \n noun                                 (Intercept) 0.1241   0.3523  \nNumber of obs: 1104, groups:  \nMD5.hash.of.participant.s.IP.address, 85; noun, 12\n\nFixed effects:\n                     Estimate Std. Error z value Pr(>|z|)    \n(Intercept)            3.6304     0.3647   9.955   <2e-16 ***\ntypedat_fem           -4.4290     0.3561 -12.437   <2e-16 ***\ntypedat_masc_or_neut  -0.5201     0.3416  -1.523    0.128    \ntypenom_fem_e         -4.4553     0.3571 -12.475   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) typdt_ typ___\ntypedat_fem -0.738              \ntypdt_msc__ -0.561  0.580       \ntypenom_fm_ -0.737  0.813  0.579"
  }
]